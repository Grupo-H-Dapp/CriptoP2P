plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id 'war'
	id "io.freefair.lombok" version "6.5.1"
	id "org.sonarqube" version "3.4.0.2513"
	id "jacoco"
}

sonarqube {
	properties {
		property "sonar.projectKey", "Grupo-H-Dapp_CriptoP2P"
		property "sonar.organization", "grupo-h-dapp"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.junit.reportsPath", "build/test/test/*/TEST-*.xml"
	}
}

jacoco {
	toolVersion = "0.8.7"
}

jacocoTestReport {
	reports {
		xml.enabled true
	}
}

group = 'ar.edu.unq.grupoh'
version = '0.0.1-SNAPSHOT'
archivesBaseName = "criptop2p"
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache:3.0.0'
	implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.3'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	implementation "javax.cache:cache-api:1.1.1"
	implementation "org.ehcache:ehcache:3.10.8"

	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'junit:junit:4.13.2'
	implementation 'org.reflections:reflections:0.10.2'
	implementation 'org.mapstruct:mapstruct:1.5.2.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.2.Final'


	//implementation 'redis.clients:jedis:4.3.1'
	//implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.7.5'
	//implementation 'org.springframework.boot:spring-boot-starter-cache:2.7.5'
	runtimeOnly 'com.h2database:h2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

tasks.jacocoTestReport {
	dependsOn test {
		classDirectories.setFrom(
				fileTree(dir: "build/classes/java/main")
						.filter({ file -> !file.name.contains('Criptop2pApplication') })
						.filter({ file -> !file.name.contains('SwaggerConfig') })
						.filter({ file -> !file.name.contains('ServletInitializer') })
						.filter({ file -> !file.name.contains('Request') })
						.filter({ file -> !file.name.contains('Exception') }))
	}
}
